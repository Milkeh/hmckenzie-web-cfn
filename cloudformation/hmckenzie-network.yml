AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CloudFormation template for hmckenzie.net network

Resources:
  # VPC Creation
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-IGW

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: 
        Ref: InternetGateway
      VpcId:
        Ref: VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-PublicRT

  PublicRouteToIGW:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: 
        Ref: PublicRouteTable
      GatewayId: 
        Ref: InternetGateway

  # Subnets - Public
  PublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-A

  PublicSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-B

  PublicSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public-C

  # Subnets - Private
  PrivateSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-A

  PrivateSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.5.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-B

  PrivateSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: 
        Ref: VPC
      CidrBlock: 10.0.6.0/24
      AvailabilityZone: !Select [ 2, !GetAZs '' ]
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Private-C

  # Security Groups
  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow SSH from specified IPs'
      VpcId:
        Ref: VPC
      GroupName: 'SSH Access'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 90.209.120.177/32
  ELBWebAccess:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow public web access to ELB'
      VpcId:
        Ref: VPC
      GroupName: 'ELB Web Access'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0

  EC2ELBAccess:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow web access from the ELB'
      VpcId:
        Ref: VPC
      GroupName: 'EC2 ELB Access'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
          Ref: ELBWebAccess
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourceSecurityGroupId: 
          Ref: ELBWebAccess

Outputs:
  # VPC Outputs
  VPC:
    Description: The VPC for the stack
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-VPC

  PublicSubnetA:
    Description: Public Subnet A
    Value: !Ref PublicSubnetA
    Export:
      Name: VPC-PublicSubnetA

  PublicSubnetB:
    Description: Public Subnet B
    Value: !Ref PublicSubnetB
    Export:
      Name: VPC-PublicSubnetB

  PublicSubnetC:
    Description: Public Subnet C
    Value: !Ref PublicSubnetC
    Export:
      Name: VPC-PublicSubnetC

  PrivateSubnetA:
    Description: Private Subnet A
    Value: !Ref PrivateSubnetA
    Export:
      Name: VPC-PrivateSubnetA

  PrivateSubnetB:
    Description: Private Subnet B
    Value: !Ref PrivateSubnetB
    Export:
      Name: VPC-PrivateSubnetB

  PrivateSubnetC:
    Description: Private Subnet C
    Value: !Ref PrivateSubnetC
    Export:
      Name: VPC-PrivateSubnetC

  # Security Group Outputs
  SSHSecurityGroup:
    Description: 'SSH Security Group'
    Value: !Ref SSHSecurityGroup
    Export:
      Name: SG-SSHAccess

  ELBWebAccess:
    Description: 'ELB Web Access Security Group'
    Value: !Ref ELBWebAccess
    Export:
      Name: SG-ELBWebAccess

  EC2ELBAccess:
    Description: 'EC2 ELB Access Security Group'
    Value: !Ref EC2ELBAccess
    Export:
      Name: SG-EC2ELBAccess