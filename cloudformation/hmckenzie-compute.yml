AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CloudFormation template for hmckenzie.net compute infrastructure

Parameters:
  NetworkStackName:
    Description: Name of the CloudFormation network stack
    Type: String
    Default: hmckenzie-network
  CertificateARN:
    Description: ARN of the ACM Certificate to be used on the Load Balancer
    Type: String
    Default: arn:aws:acm:eu-west-1:460622670287:certificate/b5197fa2-a585-4e0c-9e01-9881a022925d
  AMI:
    Description: The AMI of the AMI to use for the Auto Scaling Group
    Type: String
    Default: ami-04c2a5c7e6c051fb2
  KeyName:
    Description: The keyname of an existing KeyPair in this region
    Type: String
    Default: hmckenzie-ireland

Resources:
  # Load Balancer Configuration
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: 'Web-ALB'
      Type: application
      SecurityGroups: 
      - Fn::ImportValue:
          SG-ELBWebAccess
      Subnets:
      - Fn::ImportValue:
          VPC-PublicSubnetA
      - Fn::ImportValue:
          VPC-PublicSubnetB
      - Fn::ImportValue:
          VPC-PublicSubnetC

  HTTPListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            StatusCode: HTTP_301
      Port: 80
      Protocol: HTTP

  HTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref ALBTargetGroup
      Port: 443
      Protocol: HTTPS
      SslPolicy: "ELBSecurityPolicy-2016-08"
      Certificates:
        - CertificateArn: !Sub ${CertificateARN}

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      Name: web-tg
      Port: 80
      Protocol: HTTP
      VpcId: 
        Fn::ImportValue:
          !Sub ${NetworkStackName}-VPC

  # EC2 and Auto Scaling Group
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: Web-ASG
      LaunchConfigurationName: !Ref LaunchConfiguration
      MaxSize: "1"
      MinSize: "1"
      DesiredCapacity: "1"
      TargetGroupARNs:
      - !Ref ALBTargetGroup
      VPCZoneIdentifier:
      - Fn::ImportValue:
          VPC-PublicSubnetA
      - Fn::ImportValue:
          VPC-PublicSubnetB
      - Fn::ImportValue:
          VPC-PublicSubnetC

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      LaunchConfigurationName: Web-LaunchConfigurationv2
      ImageId: !Sub ${AMI}
      InstanceType: t4g.micro
      KeyName: ${KeyName}
      SecurityGroups:
        - Fn::ImportValue:
            SG-EC2ELBAccess
        - Fn::ImportValue:
            SG-SSHAccess
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            -
              - "#!/bin/bash -ex"
              - "\n"
              - "yum -y install httpd"
              - "\n"
              - "systemctl start httpd"
              - "\n"
              - "systemctl enable httpd"

Outputs:
  ApplicationLoadBalancerDNS:
    Description: DNS name for the Load Balancer
    Value:
      Fn::GetAtt:
        ApplicationLoadBalancer.DNSName
    Export:
      Name: ALB-DNSName
  ApplicationLoadBalancerHostedZone:
    Description: Hosted Zone for the Load Balancer
    Value:
      Fn::GetAtt:
        ApplicationLoadBalancer.CanonicalHostedZoneID
    Export:
      Name: ALB-HostedZone