AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CloudFormation template for configuring IAM resources

Parameters:
  Bucket:
    Description: Resource arn of the S3 Bucket containing media
    Type: String
    Default: arn:aws:s3:::hmckenzie-web/*

  CodePipelineAccessPolicy:
    Description: Arn of an existing CodeDeploy IAM policy (defaults to AWS managed policy)
    Type: String
    Default: arn:aws:iam::460622670287:role/CodeDeployRole

Resources:
  # Web Server Role Configuration
  WebServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebServiceRole
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: 'sts:AssumeRole'
      Path: /
  
  WebBucketAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WebS3BucketPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource: !Sub ${Bucket}
      Roles: 
        - !Ref WebServiceRole
  
  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: WebInstanceProfile
      Roles: 
        - !Ref WebServiceRole
  
  #CodeDeploy Configuration
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal: 
              Service: [codedeploy.amazonaws.com]
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub ${CodePipelineAccessPolicy}
      Path: /

Outputs:
  IAMInstanceProfile:
    Description: IAM Instance Profile for Web S3 Bucket Access
    Value:
      Fn::GetAtt:
        WebInstanceProfile.Arn
    Export:
      Name: IAM-InstanceProfile