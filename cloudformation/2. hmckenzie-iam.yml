AWSTemplateFormatVersion: 2010-09-09
Description: >-
  CloudFormation template for configuring IAM resources

Parameters:
  Bucket:
    Description: Resource arn of the S3 Bucket containing media
    Type: String
    Default: arn:aws:s3:::hmckenzie-web/*

  CodePipelineBucket:
    Description: Arn of the CodePipeline artifacts bucket 
    Type: String
    Default: arn:aws:s3:::codepipeline-eu-west-1-259369533692/*

  CodePipelineAccessPolicy:
    Description: Arn of an existing CodeDeploy IAM policy (defaults to AWS managed policy)
    Type: String
    Default: arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

Resources:
  # Web Server Role Configuration
  WebServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: WebServiceRole
      AssumeRolePolicyDocument: 
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: 'sts:AssumeRole'
      Path: /
  
  WebBucketAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WebS3BucketPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource: 
              - !Sub ${Bucket}
      Roles: 
        - !Ref WebServiceRole
  
  WebCodeDeployAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: WebCodePipelinePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
            Resource:
              - !Sub ${CodePipelineBucket}
      Roles:
        - !Ref WebServiceRole

  # CodeDeploy Service IAM Configuration
  CodeDeployAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeDeploy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
              - 's3:Get*'
              - 's3:List*'
            Resource:
              - "arn:aws:s3:::aws-codedeploy-us-east-2/*"
              - "arn:aws:s3:::aws-codedeploy-us-east-1/*"
              - "arn:aws:s3:::aws-codedeploy-us-west-1/*"
              - "arn:aws:s3:::aws-codedeploy-us-west-2/*"
              - "arn:aws:s3:::aws-codedeploy-ca-central-1/*"
              - "arn:aws:s3:::aws-codedeploy-eu-west-1/*"
              - "arn:aws:s3:::aws-codedeploy-eu-west-2/*"
              - "arn:aws:s3:::aws-codedeploy-eu-west-3/*"
              - "arn:aws:s3:::aws-codedeploy-eu-central-1/*"
              - "arn:aws:s3:::aws-codedeploy-ap-east-1/*"
              - "arn:aws:s3:::aws-codedeploy-ap-northeast-1/*"
              - "arn:aws:s3:::aws-codedeploy-ap-northeast-2/*"
              - "arn:aws:s3:::aws-codedeploy-ap-southeast-1/*"   
              - "arn:aws:s3:::aws-codedeploy-ap-southeast-2/*"
              - "arn:aws:s3:::aws-codedeploy-ap-south-1/*"
              - "arn:aws:s3:::aws-codedeploy-sa-east-1/*"
      Roles:
        - !Ref CodeDeployRole

  WebInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: WebInstanceProfile
      Roles: 
        - !Ref WebServiceRole
  
  #CodeDeploy Configuration
  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodeDeployRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal: 
              Service: [codedeploy.amazonaws.com]
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub ${CodePipelineAccessPolicy}
      Path: /

  # Testing Codepipeline Configuration
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal: 
              Service: [codepipeline.amazonaws.com]
            Action: 'sts:AssumeRole'
      Path: /
  
  CodePipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodePipelinePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
            - iam:PassRole    
            Resource: "*"
            Effect: Allow
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                - cloudformation.amazonaws.com
                - elasticbeanstalk.amazonaws.com
                - ec2.amazonaws.com
                - ecs-tasks.amazonaws.com
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetRepository
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplication
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - codestar-connections:UseConnection
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          - Action:
            - opsworks:CreateDeployment
            - opsworks:DescribeApps
            - opsworks:DescribeCommands
            - opsworks:DescribeDeployments
            - opsworks:DescribeInstances
            - opsworks:DescribeStacks
            - opsworks:UpdateApp
            - opsworks:UpdateStack
            Resource: "*"
            Effect: Allow
          - Action:
            - cloudformation:CreateStack
            - cloudformation:DeleteStack
            - cloudformation:DescribeStacks
            - cloudformation:UpdateStack
            - cloudformation:CreateChangeSet
            - cloudformation:DeleteChangeSet
            - cloudformation:DescribeChangeSet
            - cloudformation:ExecuteChangeSet
            - cloudformation:SetStackPolicy
            - cloudformation:ValidateTemplate
            Resource: "*"
            Effect: Allow
          - Action:
            - codebuild:BatchGetBuilds
            - codebuild:StartBuild
            - codebuild:BatchGetBuildBatches
            - codebuild:StartBuildBatch
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
            - devicefarm:ListProjects
            - devicefarm:ListDevicePools
            - devicefarm:GetRun
            - devicefarm:GetUpload
            - devicefarm:CreateUpload
            - devicefarm:ScheduleRun
            Resource: "*"
          - Effect: Allow
            Action:
            - servicecatalog:ListProvisioningArtifacts
            - servicecatalog:CreateProvisioningArtifact
            - servicecatalog:DescribeProvisioningArtifact
            - servicecatalog:DeleteProvisioningArtifact
            - servicecatalog:UpdateProduct
            Resource: "*"
          - Effect: Allow
            Action:
            - cloudformation:ValidateTemplate
            Resource: "*"
          - Effect: Allow
            Action:
            - ecr:DescribeImages
            Resource: "*"
          - Effect: Allow
            Action:
            - states:DescribeExecution
            - states:DescribeStateMachine
            - states:StartExecution
            Resource: "*"
          - Effect: Allow
            Action:
            - appconfig:StartDeployment
            - appconfig:StopDeployment
            - appconfig:GetDeployment
            Resource: "*"
      Roles:
        - !Ref CodePipelineRole

Outputs:
  InstanceProfile:
    Description: IAM Instance Profile for Web S3 Bucket Access
    Value:
      Fn::GetAtt:
        WebInstanceProfile.Arn
    Export:
      Name: IAM-InstanceProfile

  CodeDeployRole:
    Description: IAM Role used for the CodeDeploy service
    Value:
      Fn::GetAtt:
        CodeDeployRole.Arn
    Export:
      Name: IAM-CodeDeployRole

  CodePipelineRole:
    Description: IAM Role used for the CodePipeline service
    Value:
      Fn::GetAtt:
        CodePipelineRole.Arn
    Export:
      Name: IAM-CodePipelineRole

  CodePipelineBucket:
    Description: S3 bucket storing deployment artifacts
    Value: !Sub ${CodePipelineBucket}
    Export:
      Name: S3-CodePipelineBucket